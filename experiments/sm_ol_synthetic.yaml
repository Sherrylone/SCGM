# GNN model with synthetic dataset

MODEL_NAME: sm_ol
DATASET_NAME: synthetic

DATASET_FULL_NAME: SyntheticDataset

MODULE: models.GMN.model

BATCH_SIZE: 8

RANDOM_SEED: 123

# available GPU ids
GPUS:
  - 0
#  - 1

# Pairwise data configuration
PAIR:
  RESCALE:  # rescaled image size
    - 256
    - 256
  CANDIDATE_SHAPE:  # target candidate grid
    - 16
    - 16
  GT_GRAPH_CONSTRUCT: tri
  REF_GRAPH_CONSTRUCT: fc

# Synthetic dataset settings
SYNTHETIC:
  RANDOM_EXP_ID: 1
  DIM: 1024  # synthetic feature dimension
  TRAIN_NUM: 200  # number of training samples
  TEST_NUM: 100  # number of testing samples
  KPT_NUM: 20  # keypoint num
  OUT_NUM: 30
  FEAT_GT_UNIFORM: 1.  # feature vector ~ uniform(-X, X)
  FEAT_NOISE_STD: 1.5  # feature noise ~ N(0, X^2)
  POS_GT_UNIFORM: 256.  # keypoint position ~ uniform(0, X)
  POS_AFFINE_DXY: 50.  # t_x, t_y ~ uniform(-X, X)
  POS_AFFINE_S_LOW: 0.8  # s ~ uniform(S_LOW, S_HIGH)
  POS_AFFINE_S_HIGH: 1.2
  POS_AFFINE_DTHETA: 60.  # theta ~ uniform(-X, X)
  POS_NOISE_STD: 10.  # position noise ~ N(0, X^2)

# Training settings
TRAIN:
  # start, end epochs
  START_EPOCH: 0
  NUM_EPOCHS: 5

  LOSS_FUNC: offset

  # learning rate
  LR: 1.0e-4
  MOMENTUM: 0.9
  LR_DECAY: 0.1
  LR_STEP:  # (in epochs)
    - 20

  EPOCH_ITERS: 2000  # iterations per epoch

# Evaluation settings and PCK metric
EVAL:
  EPOCH: 30  # epoch to be tested
  SAMPLES: 100  # number of tested pairs for each class

# Visualization settings
VISUAL:
  EPOCH: 0  # epoch to be visualized
  WEIGHT_PATH: ''  # path to weight to be loaded. If you want to use this, VISUAL.EPOCH must be 0.
  CLASS: 'none'  # none for random choosing classes, else specify a class name
  SAVE: True  # save images as files, else plot images via matplotlib
  NUM_IMGS: 20  # number of images to be visualized

# GMN model parameters
GMN:
  FEATURE_CHANNEL: 512
  PI_ITER_NUM: 25
  PI_STOP_THRESH: 0.
  BS_ITER_NUM: 20
  BS_EPSILON: 1.0e-10
  VOTING_ALPHA: 200.
